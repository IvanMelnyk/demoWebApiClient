// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DemoTypes.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Demo.Services.Grpc {

  /// <summary>Holder for reflection information generated from DemoTypes.proto</summary>
  public static partial class DemoTypesReflection {

    #region Descriptor
    /// <summary>File descriptor for DemoTypes.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DemoTypesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9EZW1vVHlwZXMucHJvdG8SEmRlbW8uc2VydmljZXMuZ3JwYyIGCgRWb2lk",
            "ImQKGkRlbW9SZWNvcmRNZXRhZGF0YVNlcXVlbmNlEkYKFmRlbW9SZWNvcmRN",
            "ZXRhZGF0YUxpc3QYASADKAsyJi5kZW1vLnNlcnZpY2VzLmdycGMuRGVtb1Jl",
            "Y29yZE1ldGFkYXRhIlIKEkRlbW9SZWNvcmRNZXRhZGF0YRIKCgJpZBgBIAEo",
            "AxINCgVzdGFnZRgCIAEoCBISCgpsYW5nX3NwZWNzGAMgASgEEg0KBXRpdGxl",
            "GAQgASgJInMKD01ldGFkYXRhQ29udGVudBItCgRkYXRhGAEgASgLMh8uZGVt",
            "by5zZXJ2aWNlcy5ncnBjLkRlbW9Db250ZW50EjEKCGludGVyaW1zGAIgAygL",
            "Mh8uZGVtby5zZXJ2aWNlcy5ncnBjLkRlbW9Db250ZW50Iq0BCgdJbnRlcmlt",
            "EhIKCmludGVyaW1faWQYASABKAMSEQoJcmVjb3JkX2lkGAIgASgDEhEKCWNy",
            "ZWF0ZWRCeRgDIAEoAxIZChFjcmVhdGlvblRpbWVzdGFtcBgEIAEoAxI0Cgtj",
            "aGFuZ2VkRGF0YRgFIAEoCzIfLmRlbW8uc2VydmljZXMuZ3JwYy5EZW1vQ29u",
            "dGVudBIXCg9jaGFuZ2VkRGF0YUhhc2gYBiABKAkiSQoSRGVtb1JlY29yZFNl",
            "cXVlbmNlEjMKC2RlbW9SZWNvcmRzGAEgAygLMh4uZGVtby5zZXJ2aWNlcy5n",
            "cnBjLkRlbW9SZWNvcmQizAEKCkRlbW9SZWNvcmQSCgoCaWQYASABKAMSGQoR",
            "Y3JlYXRpb25UaW1lc3RhbXAYAiABKAMSDQoFc3RhZ2UYAyABKAgSEgoKbGFu",
            "Z19zcGVjcxgEIAEoBBINCgV0aXRsZRgFIAEoCRItCgRkYXRhGAYgASgLMh8u",
            "ZGVtby5zZXJ2aWNlcy5ncnBjLkRlbW9Db250ZW50EjYKDWFwcHJvdmVkX2Rh",
            "dGEYByABKAsyHy5kZW1vLnNlcnZpY2VzLmdycGMuRGVtb0NvbnRlbnQiGwoL",
            "RGVtb0NvbnRlbnQSDAoEdGV4dBgBIAEoCSpOCgxMYW5ndWFnZUNvZGUSFQoR",
            "VU5LTk9XTl9MQU5HX0NPREUQABILCgdFbmdsaXNoEAISDQoJVWtyYWluaWFu",
            "EAcSCwoHUnVzc2lhbhALQgJIAWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Demo.Services.Grpc.LanguageCode), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Demo.Services.Grpc.Void), global::Demo.Services.Grpc.Void.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Demo.Services.Grpc.DemoRecordMetadataSequence), global::Demo.Services.Grpc.DemoRecordMetadataSequence.Parser, new[]{ "DemoRecordMetadataList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Demo.Services.Grpc.DemoRecordMetadata), global::Demo.Services.Grpc.DemoRecordMetadata.Parser, new[]{ "Id", "Stage", "LangSpecs", "Title" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Demo.Services.Grpc.MetadataContent), global::Demo.Services.Grpc.MetadataContent.Parser, new[]{ "Data", "Interims" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Demo.Services.Grpc.Interim), global::Demo.Services.Grpc.Interim.Parser, new[]{ "InterimId", "RecordId", "CreatedBy", "CreationTimestamp", "ChangedData", "ChangedDataHash" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Demo.Services.Grpc.DemoRecordSequence), global::Demo.Services.Grpc.DemoRecordSequence.Parser, new[]{ "DemoRecords" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Demo.Services.Grpc.DemoRecord), global::Demo.Services.Grpc.DemoRecord.Parser, new[]{ "Id", "CreationTimestamp", "Stage", "LangSpecs", "Title", "Data", "ApprovedData" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Demo.Services.Grpc.DemoContent), global::Demo.Services.Grpc.DemoContent.Parser, new[]{ "Text" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  ///-------------------------------------------------------------------------------------------------
  //// LangCode
  ///-------------------------------------------------------------------------------------------------
  /// </summary>
  public enum LanguageCode {
    [pbr::OriginalName("UNKNOWN_LANG_CODE")] UnknownLangCode = 0,
    [pbr::OriginalName("English")] English = 2,
    [pbr::OriginalName("Ukrainian")] Ukrainian = 7,
    [pbr::OriginalName("Russian")] Russian = 11,
  }

  #endregion

  #region Messages
  /// <summary>
  ///-------------------------------------------------------------------------------------------------
  //// Void
  ///-------------------------------------------------------------------------------------------------
  /// </summary>
  public sealed partial class Void : pb::IMessage<Void> {
    private static readonly pb::MessageParser<Void> _parser = new pb::MessageParser<Void>(() => new Void());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Void> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Demo.Services.Grpc.DemoTypesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Void() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Void(Void other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Void Clone() {
      return new Void(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Void);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Void other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Void other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  /// <summary>
  ///-------------------------------------------------------------------------------------------------
  //// DemoRecordSequence
  ///-------------------------------------------------------------------------------------------------
  /// </summary>
  public sealed partial class DemoRecordMetadataSequence : pb::IMessage<DemoRecordMetadataSequence> {
    private static readonly pb::MessageParser<DemoRecordMetadataSequence> _parser = new pb::MessageParser<DemoRecordMetadataSequence>(() => new DemoRecordMetadataSequence());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DemoRecordMetadataSequence> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Demo.Services.Grpc.DemoTypesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DemoRecordMetadataSequence() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DemoRecordMetadataSequence(DemoRecordMetadataSequence other) : this() {
      demoRecordMetadataList_ = other.demoRecordMetadataList_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DemoRecordMetadataSequence Clone() {
      return new DemoRecordMetadataSequence(this);
    }

    /// <summary>Field number for the "demoRecordMetadataList" field.</summary>
    public const int DemoRecordMetadataListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Demo.Services.Grpc.DemoRecordMetadata> _repeated_demoRecordMetadataList_codec
        = pb::FieldCodec.ForMessage(10, global::Demo.Services.Grpc.DemoRecordMetadata.Parser);
    private readonly pbc::RepeatedField<global::Demo.Services.Grpc.DemoRecordMetadata> demoRecordMetadataList_ = new pbc::RepeatedField<global::Demo.Services.Grpc.DemoRecordMetadata>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Demo.Services.Grpc.DemoRecordMetadata> DemoRecordMetadataList {
      get { return demoRecordMetadataList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DemoRecordMetadataSequence);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DemoRecordMetadataSequence other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!demoRecordMetadataList_.Equals(other.demoRecordMetadataList_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= demoRecordMetadataList_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      demoRecordMetadataList_.WriteTo(output, _repeated_demoRecordMetadataList_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += demoRecordMetadataList_.CalculateSize(_repeated_demoRecordMetadataList_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DemoRecordMetadataSequence other) {
      if (other == null) {
        return;
      }
      demoRecordMetadataList_.Add(other.demoRecordMetadataList_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            demoRecordMetadataList_.AddEntriesFrom(input, _repeated_demoRecordMetadataList_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///-------------------------------------------------------------------------------------------------
  //// DemoRecordMetainfo
  ///-------------------------------------------------------------------------------------------------
  /// </summary>
  public sealed partial class DemoRecordMetadata : pb::IMessage<DemoRecordMetadata> {
    private static readonly pb::MessageParser<DemoRecordMetadata> _parser = new pb::MessageParser<DemoRecordMetadata>(() => new DemoRecordMetadata());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DemoRecordMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Demo.Services.Grpc.DemoTypesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DemoRecordMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DemoRecordMetadata(DemoRecordMetadata other) : this() {
      id_ = other.id_;
      stage_ = other.stage_;
      langSpecs_ = other.langSpecs_;
      title_ = other.title_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DemoRecordMetadata Clone() {
      return new DemoRecordMetadata(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    /// <summary>
    //// Header  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "stage" field.</summary>
    public const int StageFieldNumber = 2;
    private bool stage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Stage {
      get { return stage_; }
      set {
        stage_ = value;
      }
    }

    /// <summary>Field number for the "lang_specs" field.</summary>
    public const int LangSpecsFieldNumber = 3;
    private ulong langSpecs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong LangSpecs {
      get { return langSpecs_; }
      set {
        langSpecs_ = value;
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 4;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DemoRecordMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DemoRecordMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Stage != other.Stage) return false;
      if (LangSpecs != other.LangSpecs) return false;
      if (Title != other.Title) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (Stage != false) hash ^= Stage.GetHashCode();
      if (LangSpecs != 0UL) hash ^= LangSpecs.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (Stage != false) {
        output.WriteRawTag(16);
        output.WriteBool(Stage);
      }
      if (LangSpecs != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(LangSpecs);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Title);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (Stage != false) {
        size += 1 + 1;
      }
      if (LangSpecs != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(LangSpecs);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DemoRecordMetadata other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.Stage != false) {
        Stage = other.Stage;
      }
      if (other.LangSpecs != 0UL) {
        LangSpecs = other.LangSpecs;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 16: {
            Stage = input.ReadBool();
            break;
          }
          case 24: {
            LangSpecs = input.ReadUInt64();
            break;
          }
          case 34: {
            Title = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///-------------------------------------------------------------------------------------------------
  //// MetadataContent
  ///-------------------------------------------------------------------------------------------------
  /// </summary>
  public sealed partial class MetadataContent : pb::IMessage<MetadataContent> {
    private static readonly pb::MessageParser<MetadataContent> _parser = new pb::MessageParser<MetadataContent>(() => new MetadataContent());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MetadataContent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Demo.Services.Grpc.DemoTypesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MetadataContent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MetadataContent(MetadataContent other) : this() {
      Data = other.data_ != null ? other.Data.Clone() : null;
      interims_ = other.interims_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MetadataContent Clone() {
      return new MetadataContent(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private global::Demo.Services.Grpc.DemoContent data_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Demo.Services.Grpc.DemoContent Data {
      get { return data_; }
      set {
        data_ = value;
      }
    }

    /// <summary>Field number for the "interims" field.</summary>
    public const int InterimsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Demo.Services.Grpc.DemoContent> _repeated_interims_codec
        = pb::FieldCodec.ForMessage(18, global::Demo.Services.Grpc.DemoContent.Parser);
    private readonly pbc::RepeatedField<global::Demo.Services.Grpc.DemoContent> interims_ = new pbc::RepeatedField<global::Demo.Services.Grpc.DemoContent>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Demo.Services.Grpc.DemoContent> Interims {
      get { return interims_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MetadataContent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MetadataContent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Data, other.Data)) return false;
      if(!interims_.Equals(other.interims_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (data_ != null) hash ^= Data.GetHashCode();
      hash ^= interims_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (data_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Data);
      }
      interims_.WriteTo(output, _repeated_interims_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (data_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Data);
      }
      size += interims_.CalculateSize(_repeated_interims_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MetadataContent other) {
      if (other == null) {
        return;
      }
      if (other.data_ != null) {
        if (data_ == null) {
          data_ = new global::Demo.Services.Grpc.DemoContent();
        }
        Data.MergeFrom(other.Data);
      }
      interims_.Add(other.interims_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (data_ == null) {
              data_ = new global::Demo.Services.Grpc.DemoContent();
            }
            input.ReadMessage(data_);
            break;
          }
          case 18: {
            interims_.AddEntriesFrom(input, _repeated_interims_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///-------------------------------------------------------------------------------------------------
  //// Interim
  ///-------------------------------------------------------------------------------------------------
  /// </summary>
  public sealed partial class Interim : pb::IMessage<Interim> {
    private static readonly pb::MessageParser<Interim> _parser = new pb::MessageParser<Interim>(() => new Interim());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Interim> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Demo.Services.Grpc.DemoTypesReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Interim() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Interim(Interim other) : this() {
      interimId_ = other.interimId_;
      recordId_ = other.recordId_;
      createdBy_ = other.createdBy_;
      creationTimestamp_ = other.creationTimestamp_;
      ChangedData = other.changedData_ != null ? other.ChangedData.Clone() : null;
      changedDataHash_ = other.changedDataHash_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Interim Clone() {
      return new Interim(this);
    }

    /// <summary>Field number for the "interim_id" field.</summary>
    public const int InterimIdFieldNumber = 1;
    private long interimId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long InterimId {
      get { return interimId_; }
      set {
        interimId_ = value;
      }
    }

    /// <summary>Field number for the "record_id" field.</summary>
    public const int RecordIdFieldNumber = 2;
    private long recordId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RecordId {
      get { return recordId_; }
      set {
        recordId_ = value;
      }
    }

    /// <summary>Field number for the "createdBy" field.</summary>
    public const int CreatedByFieldNumber = 3;
    private long createdBy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = value;
      }
    }

    /// <summary>Field number for the "creationTimestamp" field.</summary>
    public const int CreationTimestampFieldNumber = 4;
    private long creationTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CreationTimestamp {
      get { return creationTimestamp_; }
      set {
        creationTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "changedData" field.</summary>
    public const int ChangedDataFieldNumber = 5;
    private global::Demo.Services.Grpc.DemoContent changedData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Demo.Services.Grpc.DemoContent ChangedData {
      get { return changedData_; }
      set {
        changedData_ = value;
      }
    }

    /// <summary>Field number for the "changedDataHash" field.</summary>
    public const int ChangedDataHashFieldNumber = 6;
    private string changedDataHash_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ChangedDataHash {
      get { return changedDataHash_; }
      set {
        changedDataHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Interim);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Interim other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InterimId != other.InterimId) return false;
      if (RecordId != other.RecordId) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (CreationTimestamp != other.CreationTimestamp) return false;
      if (!object.Equals(ChangedData, other.ChangedData)) return false;
      if (ChangedDataHash != other.ChangedDataHash) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (InterimId != 0L) hash ^= InterimId.GetHashCode();
      if (RecordId != 0L) hash ^= RecordId.GetHashCode();
      if (CreatedBy != 0L) hash ^= CreatedBy.GetHashCode();
      if (CreationTimestamp != 0L) hash ^= CreationTimestamp.GetHashCode();
      if (changedData_ != null) hash ^= ChangedData.GetHashCode();
      if (ChangedDataHash.Length != 0) hash ^= ChangedDataHash.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (InterimId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(InterimId);
      }
      if (RecordId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(RecordId);
      }
      if (CreatedBy != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(CreatedBy);
      }
      if (CreationTimestamp != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(CreationTimestamp);
      }
      if (changedData_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ChangedData);
      }
      if (ChangedDataHash.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ChangedDataHash);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (InterimId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(InterimId);
      }
      if (RecordId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RecordId);
      }
      if (CreatedBy != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreatedBy);
      }
      if (CreationTimestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreationTimestamp);
      }
      if (changedData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChangedData);
      }
      if (ChangedDataHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ChangedDataHash);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Interim other) {
      if (other == null) {
        return;
      }
      if (other.InterimId != 0L) {
        InterimId = other.InterimId;
      }
      if (other.RecordId != 0L) {
        RecordId = other.RecordId;
      }
      if (other.CreatedBy != 0L) {
        CreatedBy = other.CreatedBy;
      }
      if (other.CreationTimestamp != 0L) {
        CreationTimestamp = other.CreationTimestamp;
      }
      if (other.changedData_ != null) {
        if (changedData_ == null) {
          changedData_ = new global::Demo.Services.Grpc.DemoContent();
        }
        ChangedData.MergeFrom(other.ChangedData);
      }
      if (other.ChangedDataHash.Length != 0) {
        ChangedDataHash = other.ChangedDataHash;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            InterimId = input.ReadInt64();
            break;
          }
          case 16: {
            RecordId = input.ReadInt64();
            break;
          }
          case 24: {
            CreatedBy = input.ReadInt64();
            break;
          }
          case 32: {
            CreationTimestamp = input.ReadInt64();
            break;
          }
          case 42: {
            if (changedData_ == null) {
              changedData_ = new global::Demo.Services.Grpc.DemoContent();
            }
            input.ReadMessage(changedData_);
            break;
          }
          case 50: {
            ChangedDataHash = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///-------------------------------------------------------------------------------------------------
  //// DemoRecordSequence
  ///-------------------------------------------------------------------------------------------------
  /// </summary>
  public sealed partial class DemoRecordSequence : pb::IMessage<DemoRecordSequence> {
    private static readonly pb::MessageParser<DemoRecordSequence> _parser = new pb::MessageParser<DemoRecordSequence>(() => new DemoRecordSequence());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DemoRecordSequence> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Demo.Services.Grpc.DemoTypesReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DemoRecordSequence() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DemoRecordSequence(DemoRecordSequence other) : this() {
      demoRecords_ = other.demoRecords_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DemoRecordSequence Clone() {
      return new DemoRecordSequence(this);
    }

    /// <summary>Field number for the "demoRecords" field.</summary>
    public const int DemoRecordsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Demo.Services.Grpc.DemoRecord> _repeated_demoRecords_codec
        = pb::FieldCodec.ForMessage(10, global::Demo.Services.Grpc.DemoRecord.Parser);
    private readonly pbc::RepeatedField<global::Demo.Services.Grpc.DemoRecord> demoRecords_ = new pbc::RepeatedField<global::Demo.Services.Grpc.DemoRecord>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Demo.Services.Grpc.DemoRecord> DemoRecords {
      get { return demoRecords_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DemoRecordSequence);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DemoRecordSequence other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!demoRecords_.Equals(other.demoRecords_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= demoRecords_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      demoRecords_.WriteTo(output, _repeated_demoRecords_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += demoRecords_.CalculateSize(_repeated_demoRecords_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DemoRecordSequence other) {
      if (other == null) {
        return;
      }
      demoRecords_.Add(other.demoRecords_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            demoRecords_.AddEntriesFrom(input, _repeated_demoRecords_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///-------------------------------------------------------------------------------------------------
  //// DemoRecord
  ///-------------------------------------------------------------------------------------------------
  /// </summary>
  public sealed partial class DemoRecord : pb::IMessage<DemoRecord> {
    private static readonly pb::MessageParser<DemoRecord> _parser = new pb::MessageParser<DemoRecord>(() => new DemoRecord());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DemoRecord> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Demo.Services.Grpc.DemoTypesReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DemoRecord() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DemoRecord(DemoRecord other) : this() {
      id_ = other.id_;
      creationTimestamp_ = other.creationTimestamp_;
      stage_ = other.stage_;
      langSpecs_ = other.langSpecs_;
      title_ = other.title_;
      Data = other.data_ != null ? other.Data.Clone() : null;
      ApprovedData = other.approvedData_ != null ? other.ApprovedData.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DemoRecord Clone() {
      return new DemoRecord(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    /// <summary>
    //// Header  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "creationTimestamp" field.</summary>
    public const int CreationTimestampFieldNumber = 2;
    private long creationTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CreationTimestamp {
      get { return creationTimestamp_; }
      set {
        creationTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "stage" field.</summary>
    public const int StageFieldNumber = 3;
    private bool stage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Stage {
      get { return stage_; }
      set {
        stage_ = value;
      }
    }

    /// <summary>Field number for the "lang_specs" field.</summary>
    public const int LangSpecsFieldNumber = 4;
    private ulong langSpecs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong LangSpecs {
      get { return langSpecs_; }
      set {
        langSpecs_ = value;
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 5;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 6;
    private global::Demo.Services.Grpc.DemoContent data_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Demo.Services.Grpc.DemoContent Data {
      get { return data_; }
      set {
        data_ = value;
      }
    }

    /// <summary>Field number for the "approved_data" field.</summary>
    public const int ApprovedDataFieldNumber = 7;
    private global::Demo.Services.Grpc.DemoContent approvedData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Demo.Services.Grpc.DemoContent ApprovedData {
      get { return approvedData_; }
      set {
        approvedData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DemoRecord);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DemoRecord other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (CreationTimestamp != other.CreationTimestamp) return false;
      if (Stage != other.Stage) return false;
      if (LangSpecs != other.LangSpecs) return false;
      if (Title != other.Title) return false;
      if (!object.Equals(Data, other.Data)) return false;
      if (!object.Equals(ApprovedData, other.ApprovedData)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (CreationTimestamp != 0L) hash ^= CreationTimestamp.GetHashCode();
      if (Stage != false) hash ^= Stage.GetHashCode();
      if (LangSpecs != 0UL) hash ^= LangSpecs.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (data_ != null) hash ^= Data.GetHashCode();
      if (approvedData_ != null) hash ^= ApprovedData.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (CreationTimestamp != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(CreationTimestamp);
      }
      if (Stage != false) {
        output.WriteRawTag(24);
        output.WriteBool(Stage);
      }
      if (LangSpecs != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(LangSpecs);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Title);
      }
      if (data_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Data);
      }
      if (approvedData_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ApprovedData);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (CreationTimestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreationTimestamp);
      }
      if (Stage != false) {
        size += 1 + 1;
      }
      if (LangSpecs != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(LangSpecs);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (data_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Data);
      }
      if (approvedData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ApprovedData);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DemoRecord other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.CreationTimestamp != 0L) {
        CreationTimestamp = other.CreationTimestamp;
      }
      if (other.Stage != false) {
        Stage = other.Stage;
      }
      if (other.LangSpecs != 0UL) {
        LangSpecs = other.LangSpecs;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.data_ != null) {
        if (data_ == null) {
          data_ = new global::Demo.Services.Grpc.DemoContent();
        }
        Data.MergeFrom(other.Data);
      }
      if (other.approvedData_ != null) {
        if (approvedData_ == null) {
          approvedData_ = new global::Demo.Services.Grpc.DemoContent();
        }
        ApprovedData.MergeFrom(other.ApprovedData);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 16: {
            CreationTimestamp = input.ReadInt64();
            break;
          }
          case 24: {
            Stage = input.ReadBool();
            break;
          }
          case 32: {
            LangSpecs = input.ReadUInt64();
            break;
          }
          case 42: {
            Title = input.ReadString();
            break;
          }
          case 50: {
            if (data_ == null) {
              data_ = new global::Demo.Services.Grpc.DemoContent();
            }
            input.ReadMessage(data_);
            break;
          }
          case 58: {
            if (approvedData_ == null) {
              approvedData_ = new global::Demo.Services.Grpc.DemoContent();
            }
            input.ReadMessage(approvedData_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///-------------------------------------------------------------------------------------------------
  //// DemoContent
  ///-------------------------------------------------------------------------------------------------
  /// </summary>
  public sealed partial class DemoContent : pb::IMessage<DemoContent> {
    private static readonly pb::MessageParser<DemoContent> _parser = new pb::MessageParser<DemoContent>(() => new DemoContent());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DemoContent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Demo.Services.Grpc.DemoTypesReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DemoContent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DemoContent(DemoContent other) : this() {
      text_ = other.text_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DemoContent Clone() {
      return new DemoContent(this);
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 1;
    private string text_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DemoContent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DemoContent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Text != other.Text) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Text.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Text);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DemoContent other) {
      if (other == null) {
        return;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Text = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
